#!/usr/bin/env python

"""
Toy server using cherrypy and jinja2.

/ is the display pane, uses jinja2 to format whatever's in the toy database.

/mutate is the upload point, parses JSON and stuffs result into the toy database.
"""

import cherrypy, argparse, jinja2, time

class Root(object):

    def __init__(self, args):
        self.env = jinja2.Environment(loader = jinja2.FileSystemLoader(args.templates))
        self.status = {}
        self.render = dict(
            status        = self.status,
            debug         = args.debug,
            show_labels   = args.verbose,
            show_pdu_name = args.verbose,
            show_loopback = args.loopback)

    @cherrypy.expose
    def index(self):
        return self.env.get_template("index.html").render(self.render)

    @cherrypy.expose
    @cherrypy.tools.json_in()
    def mutate(self):
        val = dict(cherrypy.request.json,
                   timestamp = self.zulu,
                   client_ip = cherrypy.request.remote.ip)
        key = (cherrypy.request.remote.ip,) + tuple(val["unique"])
        self.status[key] = val

    @property
    def zulu(self):
        now = time.time()
        return "{}.{:06d}".format(
            time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(now)),
            int(now * 1000000) % 1000000)

HF = type("HF", (argparse.RawDescriptionHelpFormatter,
                 argparse.ArgumentDefaultsHelpFormatter), {})
ap = argparse.ArgumentParser(description = __doc__, formatter_class = HF)
ap.add_argument("--host", default = "127.0.0.1",        help = "listener address")
ap.add_argument("--port", default = 8080, type = int,   help = "listener port")
ap.add_argument("--templates", default = "templates",   help = "template directory")
ap.add_argument("--debug",    action = "store_true",    help = "enable raw data display")
ap.add_argument("--verbose",  action = "store_true",    help = "show boring columns")
ap.add_argument("--loopback", action = "store_true",    help = "show loopback encaps")
args = ap.parse_args()

cherrypy.config.update({"server.socket_host" : args.host,
                        "server.socket_port" : args.port })

cherrypy.quickstart(Root(args))
